services:
  bun:
    build:
      context: ./backend_bun
      dockerfile: Dockerfile.dev
    ports:
      - "3005:3000"
    volumes:
      - ./backend_bun:/app
    environment:
      - DB_HOST=db
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=todo_api
      - DB_PORT=3306
      - PORT=3000
    depends_on:
      db:
        condition: service_healthy
  rust:
    build:
      context: ./backend_rust
      dockerfile: Dockerfile.dev
    ports:
      - "3004:3000"
    volumes:
      - ./backend_rust:/app
    environment:
      - DATABASE_URL=mysql://user:password@db:3306/todo_api
      - PORT=3000
    depends_on:
      db:
        condition: service_healthy
  java:
    build:
      context: ./backend_java
      dockerfile: Dockerfile.dev
    ports:
      - "3003:3000"
    volumes:
      - ./backend_java:/app
    environment:
      - DATABASE_URL=jdbc:mysql://db:3306/todo_api
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      db:
        condition: service_healthy
  python:
    build:
      context: ./backend_python
      dockerfile: Dockerfile.dev
    ports:
      - "3002:3000"
    volumes:
      - ./backend_python:/app
    environment:
      - DATABASE_URL=mysql://user:password@db:3306/todo_api
    depends_on:
      db:
        condition: service_healthy
  golang:
    build:
      context: ./backend_golang
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    volumes:
      - ./backend_golang:/app
    environment:
      - DATABASE_URL=user:password@tcp(db:3306)/todo_api
    depends_on:
      db:
        condition: service_healthy
  nodejs:
    build:
      context: ./backend_nodejs
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./backend_nodejs:/app
    environment:
      - DATABASE_URL=mysql://user:password@db:3306/todo_api
    depends_on:
      db:
        condition: service_healthy
  db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=todo_api
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uuser -ppassword || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s

volumes:
  db_data:
